//STEP 1. Import required packages
import java.io.*;
import java.sql.*;
import java.util.*;

//import org.apache.commons.lang.StringUtils;

public class JDBCExample {
   // JDBC driver name and database URL
   static final String JDBC_DRIVER = "com.amazon.redshift.jdbc41.Driver";  
   static final String DB_URL = "jdbc:redshift://si-dw-poc.cjw3lezcuz9j.us-east-1.redshift.amazonaws.com:5439/sintl";

   //  Database credentials
   static final String USER = "kdas";
   static final String PASS = "dKle7x@L";
   
 public static void main(String[] args) {
   Connection conn = null;
   Statement stmt = null;
   try{
      //STEP 2: Register JDBC driver
      Class.forName("com.amazon.redshift.jdbc41.Driver");

      //STEP 3: Open a connection
      System.out.println("Connecting to database...");
      conn = DriverManager.getConnection(DB_URL,USER,PASS);

      //STEP 4: Set auto commit as false.
      conn.setAutoCommit(false);

      //STEP 5: Execute a query to create statment with
      // required arguments for RS example.
      System.out.println("Creating statement...");
      stmt = conn.createStatement();
                          // ResultSet.TYPE_SCROLL_INSENSITIVE);
                          // ResultSet.CONCUR_UPDATABLE);
     //begin transaction
      System.out.println("Transaction begin....");
      stmt.executeUpdate("BEGIN");
      
      String SQL = "DROP TABLE job_log1 ";
      stmt.executeUpdate(SQL); 
      
      //STEP 6: INSERT a row into job log table
      System.out.println("Inserting one row....");
      SQL = "INSERT INTO job_log (runid,entity,run_mode,job_status,job_timestamp) " +
                    "VALUES (4, 'b2', 'b2', 'b2' , sysdate)";
      stmt.executeUpdate(SQL); 
      
      SQL = "CREATE TABLE job_log2 as SELECT * FROM job_log";
      stmt.executeUpdate(SQL); 

      //STEP 7: INSERT one more row into Employees table
      //SQL = "INSERT INTO Employees " +
      //              "VALUES (107, 22, 'Sita', 'Singh')";
      //stmt.executeUpdate(SQL);

      //STEP 8: Commit data here.
      //System.out.println("Commiting data here....");
      //conn.commit();
	  
	  //STEP 9: Now list all the available records.
      String sql = "SELECT runid,entity,run_mode,job_status FROM job_log2";
      ResultSet rs = stmt.executeQuery(sql);
      System.out.println("List result set for reference....");
      printRs(rs);
      
    //end transaction
      System.out.println("Transaction end....");
      stmt.executeUpdate("END");

      //STEP 10: Clean-up environment
      rs.close();
      stmt.close();
      conn.close();
   }catch(SQLException se){
      //Handle errors for JDBC
      se.printStackTrace();
      // If there is an error then rollback the changes.
      System.out.println("Rolling back data here....");
	  try{
		 if(conn!=null)
            conn.rollback();
      }catch(SQLException se2){
         se2.printStackTrace();
      }//end try

   }catch(Exception e){
      //Handle errors for Class.forName
      e.printStackTrace();
   }finally{
      //finally block used to close resources
      try{
         if(stmt!=null)
            stmt.close();
      }catch(SQLException se2){
      }// nothing we can do
      try{
         if(conn!=null)
            conn.close();
      }catch(SQLException se){
         se.printStackTrace();
      }//end finally try
   }//end try
   System.out.println("Goodbye!");
}//end main

   public static void printRs(ResultSet rs) throws SQLException{
      //Ensure we start with first row
	   System.out.println("Ensure we start with first row....");
      //rs.beforeFirst();
      System.out.println("before first....");
      while(rs.next()){
         //Retrieve by column name
         int id  = rs.getInt("runid");
         //int age = rs.getInt("age");
         String entity = rs.getString("entity");
         String run_mode = rs.getString("run_mode");
         String job_status = rs.getString("job_status");

         //Display values
         System.out.print("RUNID: " + id);
         System.out.print(", Entity: " + entity);
         System.out.print(", run_mode: " + run_mode);
         System.out.println(", job_status: " + job_status);
     }
     System.out.println();
   }//end printRs()
}//end JDBCExample